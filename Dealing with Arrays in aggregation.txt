$unwind: 
$unwind is an aggregation pipeline stage used to deconstruct an array field
from the input documents to output a document for each element in the array. This is 
particularly useful when you have documents with arrays and you want to perform operations 
on each element of the array separately.

Student Collection document:
{
  "_id": 1,
  "name": "John",
  "subjects": ["Math", "Science", "History"]
}

Operation:
db.students.aggregate([
  {
    $unwind: "$subjects"
  }
])

Result:
{ "_id": 1, "name": "John", "subjects": "Math" }
{ "_id": 1, "name": "John", "subjects": "Science" }
{ "_id": 1, "name": "John", "subjects": "History" }


Question 1. what is Average No. of tags per user

1st Method:

[
  {
    $unwind: "$tags",
  },
  {
    $group: {
      _id: "$_id",
      numberOfTags: {
        $sum: 1,
      },
    },
  },
  {
    $group: {
      _id: null,
      averageNumberOfTags: {
        $avg: "$numberOfTags",
      },
    },
  },
]

Method 2:

[
  {
    $addFields: {
      numberOfTags: {
        $size: {
          $ifNull: ["$tags", []],
        },
      },
    },
  },
  {
    $group: {
      _id: null,
      averageNoOfTags: {
        $avg: "$numberOfTags",
      },
    },
  },
]

Question 2. How many users have 'enim' as one of their tags?

[
  {
    $match: {
      tags: "enim",
    },
  },
  {
    $count: "numberOfUsersWithTagenim",
  },
]

Question 3. what are name and age of users who are inactive and have 'velit' as tag?

[
  {
    $match: {
      isActive: false,
      tags: "velit",
    },
  },
  {
    $project: {
      name: 1,
      age: 1,
    },
  },
]

Question 4. how many users have phone number starting with '+1 (940)'?

[
  {
    $match: {
      "company.phone": /^\+1 \(940\)/,
    },
  },
  {
    $count: "numberOfUsers",
  },
]
